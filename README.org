#+title: Módulo con ejemplos de JEE, JSF y JPA
#+author: Miguel Piña
#+date: [2017-03-30 jue 08:07]

El presente repositorio contiene ejemplos de diversas tecnologías usadas para
ejemplificar los conceptos vistos en las clases de laboratorio de Ingeniería de
Software. Las tecnologías revisadas y que están dentro de este repositorio son:

- Maven
- Java Persistence Api
- Java Servlets
- Java Server Faces
  - Primefaces
    - BootsFaces
- Bootstrap

* Compilando y usando el proyecto

** Preparando la base de datos

Para poder usar todas las páginas de este proyecto, es necesario crear una base
de datos llamada *miPrimerBase* en =MySQL=, esto se hace de la siguiente forma:

#+begin_src sql
create database miPrimerBase
#+end_src

Luego crean un usuario de la siguiente forma:

#+begin_src sql
create user 'miguel'@'localhost' identified by' tfMgDc97GgP4a68WKIHmpKP5O_';
grant all privileges on miPrimerBase.* to miguel@localhost;
#+end_src

- Nota :: Si quieren cambiar el nombre del usuario, también es necesario hacerlo
     en el archivo [[file:src/main/resources/META-INF/persistence.xml][persistence.xml.]] Esto se hace modificando las siguientes
     líneas.

#+begin_src xml
   <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/mi_base_de_datos"/>
   <property name="javax.persistence.jdbc.user" value="nombre_usuario"/>
   <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver"/>
   <property name="javax.persistence.jdbc.password" value="mi_contraseña"/>
#+end_src

Después de eso, hay que cargar el script [[file:sql/modelo.sql][modelo.sql]] para que se construya el
modelo de la base de datos. Una forma de hacerlo puede ser de la siguiente
forma:

#+begin_src sh
mysql -u root -p < modelo.sql
#+end_src


Es posible que el archivo [[file:sql/modelo.sql][modelo.sql]] cambie conforme vamos agregando
características en el proyecto, por lo apoyándonos de Netbeans, vamos a
regenerar las distintas clases que representan el modelo, así como sus
respectivas clases controladoras. Un ejemplo de como hacerlo, se puede observar
en [[http://wiki.netbeans.org/TS_65_Entity_Classes_From_Database][la wiki de Netbeans.]]

** Compilando el proyecto

Cómo este es un proyecto hecho con *Maven*, basta con ingresar el siguiente
comando en la terminal (en el directorio en el que se encuentra el archivo
*pom.xml*):

#+begin_src sh
mvn clean install
#+end_src

Eso se encarga de compilarlo e instalarlo en el repositorio local de Maven.

** Ejecutando el proyecto

Para ejecutar el proyecto, en el mismo directorio donde se ejecutó la
compilación e instalación del proyecto, ejecutar:

#+begin_src sh
mvn tomcat7:run
#+end_src

Eso se encargará de levantar un servidor *Apache Tomcat* por ustedes y podrán
probar los cambios hechos en su proyecto. A partir de este momento, ya tienen un
servidor ejecutando el proyecto web, el cuál podrán acceder a través del
navegador de su preferencia.

* Páginas de ejemplo

- localhost:8080/mi-primer-aplicacion-web/ :: Ejemplo sencillo de uso de
     Servlets y conexión a la base de datos.
- localhost:8080/mi-primer-aplicacion-web/registro.xhtml :: Formulario de registro
- localhost:8080/mi-primer-aplicacion-web/sigin.xhtml :: Inicio de sesión
- localhost:8080/mi-primer-aplicacion-web/mapa.xhml :: Visualización de mapas y
     adición/eliminación de markers dentro de google maps más almacenamiento en
     la base de datos.
